import streamlit as st
import base64

def head_db():
    st.set_page_config(page_title="Atualizar Database", page_icon="üì∂")
    with open('./utils/front.css') as f:
        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)

    try:
        with open('./utils/logo_jr.png', 'rb') as logo_file:
            logo_base64 = base64.b64encode(logo_file.read()).decode('utf-8')
            st.markdown(f'<p align="center"><img src="data:image/png;base64,{logo_base64}" width="500"></p>',
                        unsafe_allow_html=True)
    except FileNotFoundError:
        st.error("Logo file not found")

    st.markdown(
        "<h1 style='text-align: center; font-size: 38px;'>Formul√°rio de atualiza√ß√£o de database<br>Funda√ß√£o Pot√™ncia</h1>",
        unsafe_allow_html=True)

    st.markdown(
        "<p style='text-align: center;'>>>> Aplicativo desenvolvido para atualiza√ß√£o de informa√ß√µes de medalhistas ol√≠mpicos <<<</p>",
        unsafe_allow_html=True)

    st.markdown("<h1 style='text-align: center; font-size: 30px;'> Banco de dados: Alunos/Olimp√≠adas</h1>",
                unsafe_allow_html=True)

    st.markdown(
        """<div style="text-align: center; font-size: 19px;"> 
        Nessa p√°gina, √© poss√≠vel editar os bancos de dados referentes √† algumas informa√ß√µes pessoais dos alunos como: 
        <strong>LinkedIn, escola, medalha recebida, s√©rie escolar...</strong>
        </div>""",
        unsafe_allow_html=True)

    st.markdown(
        """<div style="text-align: center; font-size: 20px;">
        <br>Primeiramente, escolha o database de acordo com o que quer modificar:<br>
        <ul style="text-align: left; font-size: 18px;">
            <li><strong>Alunos</strong>: g√™nero, LinkedIn e biografia do LinkedIn</li>
            <li><strong>Olimp√≠adas</strong>: escola, cidade, estado, medalha, s√©rie, ano</li>
        </ul>
        </div>""",
        unsafe_allow_html=True)

def head_ev():
    st.set_page_config(page_title="Entrevistas", page_icon="üé§")
    with open('./utils/front.css') as f:
        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)
    try:
        with open('./utils/logo_jr.png', 'rb') as logo_file:
            logo_base64 = base64.b64encode(logo_file.read()).decode('utf-8')
            st.markdown(f'<p align="center"><img src="data:image/png;base64,{logo_base64}" width="500"></p>',
                        unsafe_allow_html=True)
    except FileNotFoundError:
        st.error("Logo file not found")
    st.markdown(
        "<h1 style='text-align: center; font-size: 38px;'>Formul√°rio de atualiza√ß√£o de entrevistas<br>Funda√ß√£o Pot√™ncia</h1>",
        unsafe_allow_html=True)

    st.markdown(
        "<p style='text-align: center;'>>>> Aplicativo desenvolvido para atualiza√ß√£o de informa√ß√µes de medalhistas ol√≠mpicos <<<</p>",
        unsafe_allow_html=True)
    st.markdown("<h1 style='text-align: center; font-size: 30px;'>Banco de dados: Entrevistas</h1>",
                unsafe_allow_html=True)
    st.markdown(
        """ <div style="text-align: center; font-size: 20px;"> Nessa p√°gina, √© poss√≠vel adicionar/alterar informa√ß√µes referentes √†s entrevistas no banco de dados adicionando um arquivo excel com as informa√ß√µes no mesmo padr√£o do arquivo excel de entrevistas original</div>""",
        unsafe_allow_html=True)



def head_new_data():
    st.set_page_config(page_title="Adicionar Olimp√≠adas", page_icon="üìÅ")
    with open('./utils/front.css') as f:
        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)
    try:
        with open('./utils/logo_jr.png', 'rb') as logo_file:
            logo_base64 = base64.b64encode(logo_file.read()).decode('utf-8')
            st.markdown(f'<p align="center"><img src="data:image/png;base64,{logo_base64}" width="500"></p>',
                        unsafe_allow_html=True)
    except FileNotFoundError:
        st.error("Logo file not found")
    st.markdown(
            "<h1 style='text-align: center; font-size: 38px;'>Adicionar novas entrevistas no database<br>Funda√ß√£o Pot√™ncia</h1>",
        unsafe_allow_html=True)

    st.markdown(
        "<p style='text-align: center;'>>>> Aplicativo desenvolvido para atualiza√ß√£o de informa√ß√µes de medalhistas ol√≠mpicos <<<</p>",
        unsafe_allow_html=True)
    st.markdown("<h1 style='text-align: center; font-size: 30px;'>Banco de dados: Olimp√≠adas</h1>",
                unsafe_allow_html=True)
    st.markdown(
        """ <div style="text-align: center; font-size: 20px;"> Nessa p√°gina, √© poss√≠vel adicionar novos dados de olimp√≠adas</div>""",
        unsafe_allow_html=True)


class CacheManager:
    @staticmethod
    def clear_cache():
        for key in st.session_state.keys():
            del st.session_state[key]
        st.cache_data.clear()
        print("cache limpo")
